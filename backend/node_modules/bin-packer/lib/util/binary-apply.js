"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.binaryApply = void 0;
function binaryApply(array, item, leq, operation) {
    return binaryApplyRecursive(array, 0, array.length - 1, item, leq, operation);
}
exports.binaryApply = binaryApply;
function binaryApplyRecursive(array, left, right, item, leq, operation) {
    if (left > right) {
        if (left > right + 1) {
            throw new Error(`Algorithm error: left ${left} > right ${right} + 1`);
        }
        const index = left;
        operation(item, array, index);
        return index;
    }
    if (left === right) {
        const index = leq(item, array, array[left]) ? left : left + 1;
        operation(item, array, index);
        return index;
    }
    const mid = Math.floor((left + right) / 2);
    if (leq(item, array, array[mid])) {
        return binaryApplyRecursive(array, left, mid - 1, item, leq, operation);
    }
    else {
        return binaryApplyRecursive(array, mid + 1, right, item, leq, operation);
    }
}
